// ==UserScript==
// @name         rescript插件模板
// @author       JustAnotherID
// @version      0.1.0
// @description  rescript 编写插件的模板
// @timestamp    2024-06-21 11:45:14
// @license      MIT
// @homepageURL  https://github.com/JustAnotherID/just-another-seal-mod-repo/tree/master/js/rescript-ext-template
// ==/UserScript==

// Generated by ReScript, PLEASE EDIT WITH CARE
(() => {
  // node_modules/.pnpm/rescript@11.1.1/node_modules/rescript/lib/es6/caml_option.js
  function some(x) {
    if (x === void 0) {
      return {
        BS_PRIVATE_NESTED_SOME_NONE: 0
      };
    } else if (x !== null && x.BS_PRIVATE_NESTED_SOME_NONE !== void 0) {
      return {
        BS_PRIVATE_NESTED_SOME_NONE: x.BS_PRIVATE_NESTED_SOME_NONE + 1 | 0
      };
    } else {
      return x;
    }
  }
  function nullable_to_opt(x) {
    if (x == null) {
      return;
    } else {
      return some(x);
    }
  }
  function valFromOption(x) {
    if (!(x !== null && x.BS_PRIVATE_NESTED_SOME_NONE !== void 0)) {
      return x;
    }
    var depth = x.BS_PRIVATE_NESTED_SOME_NONE;
    if (depth === 0) {
      return;
    } else {
      return {
        BS_PRIVATE_NESTED_SOME_NONE: depth - 1 | 0
      };
    }
  }

  // types/Seal.res.js
  function find(name) {
    return nullable_to_opt(seal.ext.find(name));
  }
  var Ext = {
    find
  };

  // src/Index.res.js
  var helpDesc = "rescript 插件模板\n";
  function main() {
    var e = Ext.find("rescript-ext-template");
    var ext;
    if (e !== void 0) {
      ext = valFromOption(e);
    } else {
      var temp = seal.ext.new("rescript-ext-template", "JustAnotherID", "0.1.0");
      seal.ext.register(temp);
      ext = temp;
    }
    var cmdDemo = seal.ext.newCmdItemInfo();
    cmdDemo.name = "demo";
    cmdDemo.help = helpDesc;
    cmdDemo.solve = function(_ctx, _msg, _cmdArgs) {
      return seal.ext.newCmdExecuteResult(true);
    };
    ext.cmdMap["demo"] = cmdDemo;
  }
  main();
})();
